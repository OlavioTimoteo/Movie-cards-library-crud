{"ast":null,"code":"var _jsxFileName = \"/home/timothy/Documentos/Trybe/Projects/sd-013-a-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'no Loading',\n      movie: {},\n      shouldRedirect: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getEditableMovie();\n  }\n\n  async handleSubmit(updatedMovie) {\n    await movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      shouldRedirect: true\n    });\n  }\n\n  getEditableMovie() {\n    this.setState({\n      status: 'loading'\n    }, async () => {\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const movie = await movieAPI.getMovie(params.id);\n      this.setState({\n        status: 'no Loading',\n        movie\n      });\n    });\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  }).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/home/timothy/Documentos/Trybe/Projects/sd-013-a-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","PropTypes","Redirect","Loading","MovieForm","movieAPI","EditMovie","constructor","props","state","status","movie","shouldRedirect","handleSubmit","bind","componentDidMount","getEditableMovie","updatedMovie","updateMovie","setState","match","params","getMovie","id","render","propTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,YADG;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL;AACD;;AAEiB,QAAZH,YAAY,CAACI,YAAD,EAAe;AAC/B,UAAMZ,QAAQ,CAACa,WAAT,CAAqBD,YAArB,CAAN;AACA,SAAKE,QAAL,CAAc;AACZP,MAAAA,cAAc,EAAE;AADJ,KAAd;AAGD;;AAEDI,EAAAA,gBAAgB,GAAG;AACjB,SAAKG,QAAL,CAAc;AACZT,MAAAA,MAAM,EAAE;AADI,KAAd,EAEG,YAAY;AACb,YAAM;AAAEU,QAAAA;AAAF,UAAY,KAAKZ,KAAvB;AACA,YAAM;AAAEa,QAAAA;AAAF,UAAaD,KAAnB;AACA,YAAMT,KAAK,GAAG,MAAMN,QAAQ,CAACiB,QAAT,CAAkBD,MAAM,CAACE,EAAzB,CAApB;AACA,WAAKJ,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAE,YADI;AAEZC,QAAAA;AAFY,OAAd;AAID,KAVD;AAWD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,MAAF;AAAUE,MAAAA,cAAV;AAA0BD,MAAAA;AAA1B,QAAoC,KAAKF,KAA/C;;AACA,QAAIG,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIF,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGC,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKE,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnD+B;;AAsDlCP,SAAS,CAACmB,SAAV,GAAsB;AACpBL,EAAAA,KAAK,EAAEnB,SAAS,CAACyB,KAAV,CAAgB;AACrBL,IAAAA,MAAM,EAAEpB,SAAS,CAACyB,KAAV,CAAgB;AACtBH,MAAAA,EAAE,EAAEtB,SAAS,CAAC0B;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALiB,CAAtB;AAQA,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'no Loading',\n      movie: {},\n      shouldRedirect: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getEditableMovie();\n  }\n\n  async handleSubmit(updatedMovie) {\n    await movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  getEditableMovie() {\n    this.setState({\n      status: 'loading',\n    }, async () => {\n      const { match } = this.props;\n      const { params } = match;\n      const movie = await movieAPI.getMovie(params.id);\n      this.setState({\n        status: 'no Loading',\n        movie,\n      });\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}