{"ast":null,"code":"var _jsxFileName = \"/home/timothy/Documentos/Trybe/Projects/sd-013-a-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchMovieApi = async () => {\n      const {\n        match\n      } = this.props;\n      const {\n        id\n      } = match.params;\n      const movie = await movieAPI.getMovie(id);\n      this.setState({\n        movie,\n        loading: false\n      });\n    };\n\n    this.handleSubmit = async movieUpdated => {\n      movieAPI.updateMovie(movieUpdated);\n      this.setState({\n        shouldRedirect: true\n      });\n    };\n\n    this.state = {\n      loading: true,\n      shouldRedirect: false,\n      movie: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchMovieApi = this.fetchMovieApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovieApi();\n  }\n\n  render() {\n    const {\n      loading,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/timothy/Documentos/Trybe/Projects/sd-013-a-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","PropTypes","Redirect","MovieForm","Loading","movieAPI","EditMovie","constructor","props","fetchMovieApi","match","id","params","movie","getMovie","setState","loading","handleSubmit","movieUpdated","updateMovie","shouldRedirect","state","bind","componentDidMount","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,aAfmB,GAeH,YAAY;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKF,KAAvB;AACA,YAAM;AAAEG,QAAAA;AAAF,UAASD,KAAK,CAACE,MAArB;AACA,YAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,QAAT,CAAkBH,EAAlB,CAApB;AACA,WAAKI,QAAL,CAAc;AACZF,QAAAA,KADY;AACLG,QAAAA,OAAO,EAAE;AADJ,OAAd;AAGD,KAtBkB;;AAAA,SAwBnBC,YAxBmB,GAwBJ,MAAOC,YAAP,IAAwB;AACrCb,MAAAA,QAAQ,CAACc,WAAT,CAAqBD,YAArB;AACA,WAAKH,QAAL,CAAc;AAAEK,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,KA3BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE,IADE;AAEXI,MAAAA,cAAc,EAAE,KAFL;AAGXP,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKb,aAAL,GAAqB,KAAKA,aAAL,CAAmBa,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,aAAL;AACD;;AAgBDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,OAAF;AAAWI,MAAAA,cAAX;AAA2BP,MAAAA;AAA3B,QAAqC,KAAKQ,KAAhD;;AACA,QAAID,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIJ,OAAJ,EAAa;AACX,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGH,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKI,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA7C+B;;AAgDlC,eAAeX,SAAf;AACAA,SAAS,CAACmB,SAAV,GAAsB;AACpBf,EAAAA,KAAK,EAAET,SAAS,CAACyB,KAAV,CAAgB;AACrBd,IAAAA,MAAM,EAAEX,SAAS,CAACyB,KAAV,CAAgB;AACtBf,MAAAA,EAAE,EAAEV,SAAS,CAAC0B;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALiB,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      shouldRedirect: false,\n      movie: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchMovieApi = this.fetchMovieApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovieApi();\n  }\n\n  fetchMovieApi = async () => {\n    const { match } = this.props;\n    const { id } = match.params;\n    const movie = await movieAPI.getMovie(id);\n    this.setState({\n      movie, loading: false,\n    });\n  };\n\n  handleSubmit = async (movieUpdated) => {\n    movieAPI.updateMovie(movieUpdated);\n    this.setState({ shouldRedirect: true });\n  }\n\n  render() {\n    const { loading, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}