{"ast":null,"code":"var _jsxFileName = \"/home/timothy/Documentos/Trybe/Projects/sd-013-a-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchMovieApi = async () => {\n      console.log(this.props);\n      const {\n        match\n      } = this.props;\n      const {\n        id\n      } = match.params;\n      const movie = await movieAPI.getMovie(id);\n      this.setState({\n        movie,\n        loading: false\n      });\n    };\n\n    this.state = {\n      movie: {},\n      loading: true\n    };\n    this.fetchMovieApi = this.fetchMovieApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovieApi();\n  }\n\n  render() {\n    const {\n      movie,\n      loading\n    } = this.state;\n    const {\n      id,\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = movie;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details-page\",\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"details-storyline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(Link, {\n      className: \"link\",\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"link\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"VOLTAR\")));\n  }\n\n}\n\nexport default MovieDetails;\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/timothy/Documentos/Trybe/Projects/sd-013-a-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["PropTypes","React","Component","Link","Loading","movieAPI","MovieDetails","constructor","props","fetchMovieApi","console","log","match","id","params","movie","getMovie","setState","loading","state","bind","componentDidMount","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,aAbmB,GAaH,YAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAY,KAAKJ,KAAvB;AACA,YAAM;AAAEK,QAAAA;AAAF,UAASD,KAAK,CAACE,MAArB;AACA,YAAMC,KAAK,GAAG,MAAMV,QAAQ,CAACW,QAAT,CAAkBH,EAAlB,CAApB;AACA,WAAKI,QAAL,CAAc;AACZF,QAAAA,KADY;AACLG,QAAAA,OAAO,EAAE;AADJ,OAAd;AAGD,KArBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKT,aAAL,GAAqB,KAAKA,aAAL,CAAmBW,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,aAAL;AACD;;AAYDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,KAAF;AAASG,MAAAA;AAAT,QAAqB,KAAKC,KAAhC;AACA,UAAM;AAAEN,MAAAA,EAAF;AAAMU,MAAAA,KAAN;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA,KAAnC;AAA0CC,MAAAA,MAA1C;AAAkDC,MAAAA;AAAlD,QAA+Db,KAArE;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,qBAAY,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBACP,uDACE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAI,MAAKO,SAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,UAASF,KAAM,EAArB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,aAAYK,QAAS,EAA3B,CAHF,eAIE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,cAAaJ,SAAU,EAA3D,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,UAASE,KAAM,EAArB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,WAAUC,MAAO,EAAvB,CANF,eAOE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,EAAE,EAAI,WAAUd,EAAG,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,EAAE,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CAFJ,CADF;AAgBD;;AA3CkC;;AA6CrC,eAAeP,YAAf;AACAA,YAAY,CAACuB,SAAb,GAAyB;AACvBjB,EAAAA,KAAK,EAAEZ,SAAS,CAAC8B,KAAV,CAAgB;AACrBhB,IAAAA,MAAM,EAAEd,SAAS,CAAC8B,KAAV,CAAgB;AACtBjB,MAAAA,EAAE,EAAEb,SAAS,CAAC+B;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALoB,CAAzB","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n    this.fetchMovieApi = this.fetchMovieApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovieApi();\n  }\n\n  fetchMovieApi = async () => {\n    console.log(this.props);\n    const { match } = this.props;\n    const { id } = match.params;\n    const movie = await movieAPI.getMovie(id);\n    this.setState({\n      movie, loading: false,\n    });\n  };\n\n  render() {\n    const { movie, loading } = this.state;\n    const { id, title, storyline, imagePath, genre, rating, subtitle } = movie;\n    return (\n      <div className=\"details-page\" data-testid=\"movie-details\">\n        { loading ? <Loading /> : (\n          <>\n            <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n            <p>{ `Title: ${title}` }</p>\n            <p>{ `Subtitle: ${subtitle}` }</p>\n            <p className=\"details-storyline\">{ `Storyline: ${storyline}`}</p>\n            <p>{ `Genre: ${genre}`}</p>\n            <p>{ `Rating: ${rating}` }</p>\n            <Link className=\"link\" to={ `/movies/${id}/edit` }>EDITAR</Link>\n            <Link className=\"link\" to=\"/\">VOLTAR</Link>\n          </>\n        ) }\n      </div>\n    );\n  }\n}\nexport default MovieDetails;\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}